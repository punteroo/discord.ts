"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4515],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return u}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),p=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(i.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=m(e,["components","mdxType","originalType","parentName"]),c=p(t),u=r,N=c["".concat(i,".").concat(u)]||c[u]||s[u]||o;return t?a.createElement(N,l(l({ref:n},d),{},{components:t})):a.createElement(N,l({ref:n},d))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=c;var m={};for(var i in n)hasOwnProperty.call(n,i)&&(m[i]=n[i]);m.originalType=e,m.mdxType="string"==typeof e?e:r,l[1]=m;for(var p=2;p<o;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},8212:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return m},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return d},default:function(){return c}});var a=t(7462),r=t(3366),o=(t(7294),t(3905)),l=["components"],m={},i="@SimpleCommandOption",p={unversionedId:"decorators/commands/simplecommandoption",id:"decorators/commands/simplecommandoption",title:"@SimpleCommandOption",description:"A simple command can have multiple options (parameters)",source:"@site/docs/decorators/commands/simplecommandoption.md",sourceDirName:"decorators/commands",slug:"/decorators/commands/simplecommandoption",permalink:"/docs/decorators/commands/simplecommandoption",editUrl:"https://github.com/oceanroleplay/discord.ts/edit/main/docs/docs/decorators/commands/simplecommandoption.md",tags:[],version:"current",lastUpdatedBy:"oceanroleplay",lastUpdatedAt:1644563592,formattedLastUpdatedAt:"2/11/2022",frontMatter:{},sidebar:"docSidebar",previous:{title:"@SimpleCommand",permalink:"/docs/decorators/commands/simplecommand"},next:{title:"@Bot",permalink:"/docs/decorators/general/bot"}},d=[{value:"Declare an option",id:"declare-an-option",children:[],level:2},{value:"Use custom arg splitter",id:"use-custom-arg-splitter",children:[],level:2},{value:"Type inference",id:"type-inference",children:[],level:2},{value:"Signature",id:"signature",children:[],level:2},{value:"Parameters",id:"parameters",children:[{value:"name",id:"name",children:[],level:3},{value:"params",id:"params",children:[{value:"<code>description</code>",id:"description",children:[],level:4},{value:"<code>type</code>",id:"type",children:[],level:4}],level:3}],level:2}],s={toc:d};function c(e){var n=e.components,t=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"simplecommandoption"},"@SimpleCommandOption"),(0,o.kt)("p",null,"A simple command can have multiple options (parameters)"),(0,o.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"A simple command is dependent on the content of the message but unfortunately, Discord plans to remove message content for verified bots and apps, those with 100 or more servers. Hence, You cannot use simple commands if your bot cannot access message content."),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("a",{parentName:"p",href:"https://support-dev.discord.com/hc/en-us/articles/4404772028055-Message-Content-Access-Deprecation-for-Verified-Bots"},"Read discord message here")))),(0,o.kt)("h2",{id:"declare-an-option"},"Declare an option"),(0,o.kt)("p",null,"To declare an option you simply use the ",(0,o.kt)("inlineCode",{parentName:"p"},"@SimpleCommandOption")," decorator before a method parameter"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'  @SimpleCommand("hello")\n  async testCommand(\n    @SimpleCommandOption("name", { type: "STRING" }) name: string | undefined,\n    command: SimpleCommandMessage\n  ) {\n    if (!name) return message.reply("usage: ``!hello <your name>``");\n    command.message.reply(`hello ${name}`);\n  }\n')),(0,o.kt)("h2",{id:"use-custom-arg-splitter"},"Use custom arg splitter"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'  @SimpleCommand("add", { argSplitter: "+" })\n  async add(\n    @SimpleCommandOption("x", { type: "INTEGER" }) x: number | undefined,\n    @SimpleCommandOption("y", { type: "INTEGER" }) y: number | undefined,\n    command: SimpleCommandMessage\n  ) {\n    if (!command.isValid()) return command.sendUsageSyntax();\n    return command.message.reply(`${x + y}`);\n  }\n')),(0,o.kt)("h2",{id:"type-inference"},"Type inference"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},'"STRING"'),"\n",(0,o.kt)("strong",{parentName:"p"},"Infered from ",(0,o.kt)("inlineCode",{parentName:"strong"},"String"))),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'fn(\n  @SimpleCommandOption("x")\n  channel: string,\n)\n'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},'"BOOLEAN"'),"\n",(0,o.kt)("strong",{parentName:"p"},"Infered from ",(0,o.kt)("inlineCode",{parentName:"strong"},"Boolean"))),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'fn(\n  @SimpleCommandOption("x")\n  channel: boolean,\n)\n'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},'"INTEGER"'),"\n",(0,o.kt)("strong",{parentName:"p"},"Infered from ",(0,o.kt)("inlineCode",{parentName:"strong"},"Number"))),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'fn(\n  @SimpleCommandOption("x")\n  channel: number,\n)\n'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},'"ROLE"'),"\n",(0,o.kt)("strong",{parentName:"p"},"Infered from ",(0,o.kt)("inlineCode",{parentName:"strong"},"Role"))),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'fn(\n  @SimpleCommandOption("x")\n  channel: Role,\n)\n'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},'"USER"'),"\n",(0,o.kt)("strong",{parentName:"p"},"Infered from ",(0,o.kt)("inlineCode",{parentName:"strong"},"User")," | ",(0,o.kt)("inlineCode",{parentName:"strong"},"GuildMember")," (you will recieve GuildMember if present otherwise User)")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'fn(\n  @SimpleCommandOption("x")\n  channel: User,\n)\n'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},'"CHANNEL"'),"\n",(0,o.kt)("strong",{parentName:"p"},"Infered from ",(0,o.kt)("inlineCode",{parentName:"strong"},"Channel")," (or ",(0,o.kt)("inlineCode",{parentName:"strong"},"TextChannel")," / ",(0,o.kt)("inlineCode",{parentName:"strong"},"VoiceChannel"),", not recommended)")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'fn(\n  @SimpleCommandOption("x")\n  channel: Channel,\n'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},'"MENTIONABLE"'),"\n",(0,o.kt)("strong",{parentName:"p"},"No inference, use:")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'fn(\n  @SimpleCommandOption("x", { type: "MENTIONABLE" })\n  channel: GuildMember | User | Role,\n)\n')))),(0,o.kt)("h2",{id:"signature"},"Signature"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'SimpleCommandOption( name: string, params?: { description?: string; type?: "STRING | INTEGER | NUMBER | BOOLEAN | USER | CHANNEL | ROLE | MENTIONABLE" } );\n')),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("h3",{id:"name"},"name"),(0,o.kt)("p",null,"The name of your command option"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"type"),(0,o.kt)("th",{parentName:"tr",align:null},"default"),(0,o.kt)("th",{parentName:"tr",align:null},"required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,o.kt)("h3",{id:"params"},"params"),(0,o.kt)("p",null,"Multiple options, check below."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"type"),(0,o.kt)("th",{parentName:"tr",align:null},"default"),(0,o.kt)("th",{parentName:"tr",align:null},"required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"object"),(0,o.kt)("td",{parentName:"tr",align:null},"undefined"),(0,o.kt)("td",{parentName:"tr",align:null},"No")))),(0,o.kt)("h4",{id:"description"},(0,o.kt)("inlineCode",{parentName:"h4"},"description")),(0,o.kt)("p",null,"The description of command option"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"type"),(0,o.kt)("th",{parentName:"tr",align:null},"default"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"Command type")))),(0,o.kt)("h4",{id:"type"},(0,o.kt)("inlineCode",{parentName:"h4"},"type")),(0,o.kt)("p",null,"The type of your command option"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"type"),(0,o.kt)("th",{parentName:"tr",align:null},"default"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"STRING ","|"," INTEGER ","|"," NUMBER ","|"," BOOLEAN ","|"," USER ","|"," CHANNEL ","|"," ROLE ","|"," MENTIONABLE"),(0,o.kt)("td",{parentName:"tr",align:null},"inference")))))}c.isMDXComponent=!0}}]);