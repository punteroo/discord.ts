"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5877],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,g=p["".concat(u,".").concat(m)]||p[m]||s[m]||o;return n?a.createElement(g,l(l({ref:t},d),{},{components:n})):a.createElement(g,l({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7816:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=["components"],i={},u="@SelectMenuComponent",c={unversionedId:"decorators/gui/selectmenucomponent",id:"decorators/gui/selectmenucomponent",title:"@SelectMenuComponent",description:"add select menu interaction handler for your bot using @SelectMenuComponent decorator",source:"@site/docs/decorators/gui/selectmenucomponent.md",sourceDirName:"decorators/gui",slug:"/decorators/gui/selectmenucomponent",permalink:"/docs/decorators/gui/selectmenucomponent",editUrl:"https://github.com/oceanroleplay/discord.ts/edit/main/docs/docs/decorators/gui/selectmenucomponent.md",tags:[],version:"current",lastUpdatedBy:"oceanroleplay",lastUpdatedAt:1644563592,formattedLastUpdatedAt:"2/11/2022",frontMatter:{},sidebar:"docSidebar",previous:{title:"@ContextMenu",permalink:"/docs/decorators/gui/contextmenu"}},d=[{value:"Example",id:"example",children:[],level:2},{value:"Signature",id:"signature",children:[],level:2},{value:"Parameters",id:"parameters",children:[{value:"custom_id",id:"custom_id",children:[],level:3},{value:"params",id:"params",children:[{value:"<code>botIds</code>",id:"botids",children:[],level:4},{value:"<code>Guilds</code>",id:"guilds",children:[],level:4}],level:3}],level:2}],s={toc:d};function p(e){var t=e.components,i=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},s,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"selectmenucomponent"},"@SelectMenuComponent"),(0,o.kt)("p",null,"add select menu interaction handler for your bot using ",(0,o.kt)("inlineCode",{parentName:"p"},"@SelectMenuComponent")," decorator"),(0,o.kt)("p",null,"Here are some example screenshots:"),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(1060).Z,width:"494",height:"244"})),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const roles = [\n  { label: "Principal", value: "principal" },\n  { label: "Teacher", value: "teacher" },\n  { label: "Student", value: "student" },\n];\n\n@Discord()\nclass buttons {\n  @SelectMenuComponent("role-menu")\n  async handle(interaction: SelectMenuInteraction) {\n    await interaction.deferReply();\n\n    // extract selected value by member\n    const roleValue = interaction.values?.[0];\n\n    // if value not found\n    if (!roleValue)\n      return await interaction.followUp("invalid role id, select again");\n    await interaction.followUp(\n      `you have selected role: ${\n        roles.find((r) => r.value === roleValue).label\n      }`\n    );\n    return;\n  }\n\n  @Slash("myroles", { description: "roles menu" })\n  async myroles(interaction: CommandInteraction): Promise<unknown> {\n    await interaction.deferReply();\n\n    // create menu for roels\n    const menu = new MessageSelectMenu()\n      .addOptions(roles)\n      .setCustomId("role-menu");\n\n    // create a row for meessage actions\n    const buttonRow = new MessageActionRow().addComponents(menu);\n\n    // send it\n    interaction.editReply({\n      content: "select your role!",\n      components: [buttonRow],\n    });\n    return;\n  }\n}\n')),(0,o.kt)("h2",{id:"signature"},"Signature"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"@SelectMenuComponent(custom_id: string, params?: { guilds?: Snowflake[]; botIds?: string[] )\n")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("h3",{id:"custom_id"},"custom_id"),(0,o.kt)("p",null,"A unique id for your button interaction to be handled under."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"type"),(0,o.kt)("th",{parentName:"tr",align:null},"default"),(0,o.kt)("th",{parentName:"tr",align:null},"required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"function name"),(0,o.kt)("td",{parentName:"tr",align:null},"No")))),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"As per discord latest annoucement, ",(0,o.kt)("inlineCode",{parentName:"p"},"custom_ids")," being unique within a message. ",(0,o.kt)("a",{parentName:"p",href:"https://discord.com/developers/docs/interactions/message-components#custom-id"},"read here more")))),(0,o.kt)("h3",{id:"params"},"params"),(0,o.kt)("p",null,"Multiple options, check below."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"type"),(0,o.kt)("th",{parentName:"tr",align:null},"default"),(0,o.kt)("th",{parentName:"tr",align:null},"required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"object"),(0,o.kt)("td",{parentName:"tr",align:null},"undefined"),(0,o.kt)("td",{parentName:"tr",align:null},"No")))),(0,o.kt)("h4",{id:"botids"},(0,o.kt)("inlineCode",{parentName:"h4"},"botIds")),(0,o.kt)("p",null,"Array of bot ids, for which only the event will be executed."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"type"),(0,o.kt)("th",{parentName:"tr",align:null},"default"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"string","[ ]"),(0,o.kt)("td",{parentName:"tr",align:null},"[ ]")))),(0,o.kt)("h4",{id:"guilds"},(0,o.kt)("inlineCode",{parentName:"h4"},"Guilds")),(0,o.kt)("p",null,"The guilds where the command is created"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"type"),(0,o.kt)("th",{parentName:"tr",align:null},"default"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"string","[ ]"),(0,o.kt)("td",{parentName:"tr",align:null},"[ ]")))))}p.isMDXComponent=!0},1060:function(e,t,n){t.Z=n.p+"assets/images/select-menu-example-0fe02ad4093a7ea140cade33a1074a62.jpg"}}]);