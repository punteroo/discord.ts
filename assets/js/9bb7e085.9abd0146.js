"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4938],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return u}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=p(t),u=a,h=d["".concat(l,".").concat(u)]||d[u]||c[u]||i;return t?r.createElement(h,o(o({ref:n},m),{},{components:t})):r.createElement(h,o({ref:n},m))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5331:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return m},default:function(){return d}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),o=["components"],s={},l="@Permission",p={unversionedId:"decorators/general/permission",id:"decorators/general/permission",title:"@Permission",description:"Define permission for your application command or simple command.",source:"@site/docs/decorators/general/permission.md",sourceDirName:"decorators/general",slug:"/decorators/general/permission",permalink:"/docs/decorators/general/permission",editUrl:"https://github.com/oceanroleplay/discord.ts/edit/main/docs/docs/decorators/general/permission.md",tags:[],version:"current",lastUpdatedBy:"oceanroleplay",lastUpdatedAt:1644563592,formattedLastUpdatedAt:"2/11/2022",frontMatter:{},sidebar:"docSidebar",previous:{title:"@Once - Discord events",permalink:"/docs/decorators/general/once"},next:{title:"@ButtonComponent",permalink:"/docs/decorators/gui/buttoncomponent"}},m=[{value:"Setup permissions",id:"setup-permissions",children:[],level:2},{value:"Permissions at class level",id:"permissions-at-class-level",children:[],level:2},{value:"Example - Dynamic permission resolver",id:"example---dynamic-permission-resolver",children:[],level:2},{value:"Signature",id:"signature",children:[],level:2},{value:"type: Boolean",id:"type-boolean",children:[],level:2},{value:"type: IPermissions",id:"type-ipermissions",children:[{value:"id",id:"id",children:[],level:3},{value:"type",id:"type",children:[],level:3},{value:"permission",id:"permission-1",children:[],level:3}],level:2},{value:"Make changes to",id:"make-changes-to",children:[],level:2}],c={toc:m};function d(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"permission"},"@Permission"),(0,i.kt)("p",null,"Define permission for your application command or simple command."),(0,i.kt)("p",null,"The permissions are based on a ",(0,i.kt)("strong",{parentName:"p"},"role id")," or ",(0,i.kt)("strong",{parentName:"p"},"user id")," that you specify on the @Permission decorator"),(0,i.kt)("p",null,"The permissions will be set when you call ",(0,i.kt)("inlineCode",{parentName:"p"},"client.initApplicationPermissions()")),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"From discord developer docs:"),(0,i.kt)("p",{parentName:"div"},"For now, if you don't have permission to use a command, they'll show up in the command picker as disabled and unusable. They will not be hidden."))),(0,i.kt)("h2",{id:"setup-permissions"},"Setup permissions"),(0,i.kt)("p",null,"You can decorate your method with one or more @Permission decorators."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\nclass DiscordBot {\n  @Permission(false) // We will enable command for specific users/roles only, so disable it for everyone\n  @Permission({ id: "USER_ID", type: "USER", permission: true }) // Only the role that has this USER_ID can use this command\n  @Permission({ id: "ROLE_ID", type: "ROLE", permission: true }) // Only the role that has this ROLE_ID can use this command\n  @Slash("hello")\n  private hello() {\n    // ...\n  }\n}\n')),(0,i.kt)("h2",{id:"permissions-at-class-level"},"Permissions at class level"),(0,i.kt)("p",null,"You can set the permissions for all @Slash inside the class by decorating the class with @Permission"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n@Permission(false) // We will enable command for specific users/roles only, so disable it for everyone\n@Permission({ id: "USER_ID", type: "USER", permission: true }) // Only the role that has this USER_ID can use this command\n@Permission({ id: "ROLE_ID", type: "ROLE", permission: true }) // Only the role that has this ROLE_ID can use this command\nclass DiscordBot {\n  @Slash("hello") // Only the role that has this ROLE_ID can use this command\n  private hello() {\n    // ...\n  }\n\n  @Slash("hello2") // Only the role that has this ROLE_ID can use this command\n  private hello2() {\n    // ...\n  }\n}\n')),(0,i.kt)("h2",{id:"example---dynamic-permission-resolver"},"Example - Dynamic permission resolver"),(0,i.kt)("p",null,"Whenever permissions are required, dynamic resolvers are called. Such as, When ",(0,i.kt)("inlineCode",{parentName:"p"},"initApplicationPermissions")," or simple command execution is performed. A dynamic permission resolver is helpful for saving permissions in the database."),(0,i.kt)("p",null,"Note: In order to refresh application permissions dynamically, run ",(0,i.kt)("inlineCode",{parentName:"p"},"initApplicationPermissions")," anywhere."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n@Permission(false) // We will enable command for specific users/roles only, so disable it for everyone\n@Permission(async (guild, cmd): Promise<ApplicationCommandPermissions[]> => {\n  const getResponse = () => {\n    return new Promise((resolve) => {\n      setTimeout(function () {\n        resolve(true);\n      }, 5000);\n    });\n  };\n  await getResponse(); // add delay\n  return { id: "462341082919731200", permission: true, type: "USER" };\n})\nclass DiscordBot {\n  @Slash("hello") // Only the role that has this ROLE_ID can use this command\n  private hello() {\n    // ...\n  }\n\n  @Slash("hello2") // Only the role that has this ROLE_ID can use this command\n  private hello2() {\n    // ...\n  }\n}\n')),(0,i.kt)("h2",{id:"signature"},"Signature"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"@Permission(\n  permission: boolean | IPermissions\n): ClassMethodDecorator\n")),(0,i.kt)("h2",{id:"type-boolean"},"type: Boolean"),(0,i.kt)("p",null,"Overwrite default permission (aka permission for everyone) for application/simple command. When true, the command can be used by anyone except those who have been denied by the @Permission decorator, vice versa."),(0,i.kt)("h2",{id:"type-ipermissions"},"type: IPermissions"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"type IPermissions =\n  | ApplicationCommandPermissions\n  | ApplicationCommandPermissions[]\n  | ((\n      guild: Guild,\n      command: ApplicationCommandMixin | SimpleCommandMessage\n    ) =>\n      | ApplicationCommandPermissions\n      | ApplicationCommandPermissions[]\n      | Promise<ApplicationCommandPermissions>\n      | Promise<ApplicationCommandPermissions[]>);\n")),(0,i.kt)("h3",{id:"id"},"id"),(0,i.kt)("p",null,"The id if the user or role"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"type"),(0,i.kt)("th",{parentName:"tr",align:null},"required"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Snowflake"),(0,i.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,i.kt)("h3",{id:"type"},"type"),(0,i.kt)("p",null,"It specify if the permission is given to a user or a role"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"type"),(0,i.kt)("th",{parentName:"tr",align:null},"required"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"ROLE ","|"," USER"),(0,i.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,i.kt)("h3",{id:"permission-1"},"permission"),(0,i.kt)("p",null,"It specify if the permission is granted or restricated"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"type"),(0,i.kt)("th",{parentName:"tr",align:null},"required"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,i.kt)("h2",{id:"make-changes-to"},"Make changes to"),(0,i.kt)("p",null,"It either extends or overwrites data configured in below decorators, however, the order of decorators matters."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/decorators/general/discord"},"@Discord")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/decorators/commands/simplecommand"},"@SimpleCommand")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/decorators/commands/slash"},"@Slash")))}d.isMDXComponent=!0}}]);