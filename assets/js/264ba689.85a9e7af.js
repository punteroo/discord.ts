"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7402],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,g=p["".concat(c,".").concat(m)]||p[m]||u[m]||l;return n?r.createElement(g,o(o({ref:t},s),{},{components:n})):r.createElement(g,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9153:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return s},default:function(){return p}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),o=["components"],i={},c="@Guild",d={unversionedId:"decorators/general/guild",id:"decorators/general/guild",title:"@Guild",description:"You can use this guard to specify which guilds your @Slash commands are created by decorating the method with @Slash and @Guild",source:"@site/docs/decorators/general/guild.md",sourceDirName:"decorators/general",slug:"/decorators/general/guild",permalink:"/docs/decorators/general/guild",editUrl:"https://github.com/oceanroleplay/discord.ts/edit/main/docs/docs/decorators/general/guild.md",tags:[],version:"current",lastUpdatedBy:"oceanroleplay",lastUpdatedAt:1644563592,formattedLastUpdatedAt:"2/11/2022",frontMatter:{},sidebar:"docSidebar",previous:{title:"@Guard",permalink:"/docs/decorators/general/guard"},next:{title:"@On - Discord events",permalink:"/docs/decorators/general/on"}},s=[{value:"Guild at class level",id:"guild-at-class-level",children:[],level:2},{value:"Example - Dynamic guild resolver",id:"example---dynamic-guild-resolver",children:[],level:2},{value:"Signature",id:"signature",children:[],level:2},{value:"type: IGuild",id:"type-iguild",children:[],level:2},{value:"Make changes to",id:"make-changes-to",children:[],level:2}],u={toc:s};function p(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"guild"},"@Guild"),(0,l.kt)("p",null,"You can use this guard to specify which guilds your @Slash commands are created by decorating the method with @Slash and @Guild"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\nabstract class AppDiscord {\n  @Slash("hello")\n  @Guild("GUILD_ID") // Only created on the guild GUILD_ID\n  private hello() {\n    // ...\n  }\n\n  @Slash("bye")\n  @Guild("GUILD_ID", "GUILD_ID2") // Only created on the guild GUILD_ID and GUILD_ID2\n  private bye() {\n    // ...\n  }\n}\n')),(0,l.kt)("h2",{id:"guild-at-class-level"},"Guild at class level"),(0,l.kt)("p",null,"You can set the guild IDs for all @Slash inside the class by decorating the class with @Guild"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n@Guild("GUILD_ID", "GUILD_ID2")\nclass DiscordBot {\n  @Slash("hello") // Only created on the guild GUILD_ID and GUILD_ID2\n  private hello() {\n    // ...\n  }\n\n  @Slash("hello2") // Only created on the guild GUILD_ID and GUILD_ID2\n  private hello2() {\n    // ...\n  }\n}\n')),(0,l.kt)("h2",{id:"example---dynamic-guild-resolver"},"Example - Dynamic guild resolver"),(0,l.kt)("p",null,"To provide dynamic guild lists, use guild resolver."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"this._client = new Client({\n  botGuilds: [(client) => client.guilds.cache.map((guild) => guild.id)],\n});\n")),(0,l.kt)("h2",{id:"signature"},"Signature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"@Guild(...guildIds: IGuild[])\n")),(0,l.kt)("h2",{id:"type-iguild"},"type: IGuild"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"IGuild",IGuild:!0},"type IGuild =\n  | Snowflake\n  | Snowflake[]\n  | ((\n      client: Client,\n      command:\n        | DApplicationCommand\n        | DComponent\n        | SimpleCommandMessage\n        | undefined\n    ) => Snowflake | Snowflake[] | Promise<Snowflake> | Promise<Snowflake[]>);\n")),(0,l.kt)("h2",{id:"make-changes-to"},"Make changes to"),(0,l.kt)("p",null,"It either extends or overwrites data configured in below decorators, however, the order of decorators matters."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/decorators/gui/buttoncomponent"},"@ButtonComponent")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/decorators/gui/selectmenucomponent"},"@SelectMenuComponent")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/decorators/general/discord"},"@Discord")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/decorators/commands/simplecommand"},"@SimpleCommand")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/decorators/commands/slash"},"@Slash")))}p.isMDXComponent=!0}}]);